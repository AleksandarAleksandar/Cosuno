{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandarvasiljevic/git/Cosuno/client/src/utils/Button.tsx\";\nimport React from 'react';\nimport { classes } from 'typestyle';\nimport { stylesheet } from 'typestyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTON_STYLES = {\n  height: '20px',\n  minWidth: '80px',\n  fontWeight: 'bold',\n  borderRadius: 4,\n  borderStyle: 'none',\n  padding: '8px'\n};\nconst displayVariants = stylesheet({\n  main: { ...BUTTON_STYLES,\n    backgroundColor: 'gray',\n    color: 'white'\n  },\n  outline: { ...BUTTON_STYLES,\n    backgroundColor: 'transparent',\n    color: CTA_COLOR,\n    border: `2px ${CTA_COLOR}`,\n    borderStyle: 'solid',\n    ...padding({\n      vertical: 0,\n      horizontal: `calc(${relative(16)} - 2px)`\n    })\n  },\n  light: { ...BUTTON_STYLES,\n    backgroundColor: 'transparent',\n    color: CTA_COLOR\n  },\n  cancel: { ...BUTTON_STYLES,\n    backgroundColor: 'transparent',\n    color: STRONG_INDICATOR_MAIN_COLOR,\n    border: `2px ${STRONG_INDICATOR_MAIN_COLOR}`,\n    borderStyle: 'solid'\n  },\n  disabled: {\n    border: `2px solid ${BORDER_COLOR}`,\n    color: BORDER_COLOR,\n    backgroundColor: WHITE_COLOR,\n    cursor: 'not-allowed !important'\n  },\n  mainLight: { ...BUTTON_STYLES,\n    backgroundColor: 'transparent',\n    color: WHITE_COLOR\n  }\n});\n// type ButtonProps = {\n//     title: string;\n//     className?: string;\n//     disabled?: boolean;\n// };\nexport function Button(_ref) {\n  let {\n    title,\n    className,\n    disabled = false,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classes(styles.button, className),\n    disabled: disabled,\n    ...props,\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","classes","stylesheet","BUTTON_STYLES","height","minWidth","fontWeight","borderRadius","borderStyle","padding","displayVariants","main","backgroundColor","color","outline","CTA_COLOR","border","vertical","horizontal","relative","light","cancel","STRONG_INDICATOR_MAIN_COLOR","disabled","BORDER_COLOR","WHITE_COLOR","cursor","mainLight","Button","title","className","props","styles","button"],"sources":["/Users/aleksandarvasiljevic/git/Cosuno/client/src/utils/Button.tsx"],"sourcesContent":["import React, { ButtonHTMLAttributes } from 'react';\nimport { classes } from 'typestyle';\n\nimport { stylesheet } from 'typestyle';\nimport { NestedCSSProperties } from 'typestyle/lib/types';\n\nconst BUTTON_STYLES: NestedCSSProperties = {\n    height: '20px',\n    minWidth: '80px',\n    fontWeight: 'bold',\n    borderRadius: 4,\n    borderStyle: 'none',\n    padding: '8px',\n};\nconst displayVariants = stylesheet({\n    main: {\n        ...BUTTON_STYLES,\n        backgroundColor: 'gray',\n        color: 'white',\n    },\n    outline: {\n        ...BUTTON_STYLES,\n        backgroundColor: 'transparent',\n        color: CTA_COLOR,\n        border: `2px ${CTA_COLOR}`,\n        borderStyle: 'solid',\n        ...padding({ vertical: 0, horizontal: `calc(${relative(16)} - 2px)` }),\n    },\n    light: {\n        ...BUTTON_STYLES,\n        backgroundColor: 'transparent',\n        color: CTA_COLOR,\n    },\n    cancel: {\n        ...BUTTON_STYLES,\n        backgroundColor: 'transparent',\n        color: STRONG_INDICATOR_MAIN_COLOR,\n        border: `2px ${STRONG_INDICATOR_MAIN_COLOR}`,\n        borderStyle: 'solid',\n    },\n    disabled: {\n        border: `2px solid ${BORDER_COLOR}`,\n        color: BORDER_COLOR,\n        backgroundColor: WHITE_COLOR,\n        cursor: 'not-allowed !important',\n    },\n    mainLight: {\n        ...BUTTON_STYLES,\n        backgroundColor: 'transparent',\n        color: WHITE_COLOR,\n    },\n});\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n    title: string;\n};\n// type ButtonProps = {\n//     title: string;\n//     className?: string;\n//     disabled?: boolean;\n// };\nexport function Button({ title, className, disabled = false, ...props }: ButtonProps) {\n    return (\n        <button className={classes(styles.button, className)} disabled={disabled} {...props}>\n            {title}\n        </button>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,SAASC,UAAT,QAA2B,WAA3B;;AAGA,MAAMC,aAAkC,GAAG;EACvCC,MAAM,EAAE,MAD+B;EAEvCC,QAAQ,EAAE,MAF6B;EAGvCC,UAAU,EAAE,MAH2B;EAIvCC,YAAY,EAAE,CAJyB;EAKvCC,WAAW,EAAE,MAL0B;EAMvCC,OAAO,EAAE;AAN8B,CAA3C;AAQA,MAAMC,eAAe,GAAGR,UAAU,CAAC;EAC/BS,IAAI,EAAE,EACF,GAAGR,aADD;IAEFS,eAAe,EAAE,MAFf;IAGFC,KAAK,EAAE;EAHL,CADyB;EAM/BC,OAAO,EAAE,EACL,GAAGX,aADE;IAELS,eAAe,EAAE,aAFZ;IAGLC,KAAK,EAAEE,SAHF;IAILC,MAAM,EAAG,OAAMD,SAAU,EAJpB;IAKLP,WAAW,EAAE,OALR;IAML,GAAGC,OAAO,CAAC;MAAEQ,QAAQ,EAAE,CAAZ;MAAeC,UAAU,EAAG,QAAOC,QAAQ,CAAC,EAAD,CAAK;IAAhD,CAAD;EANL,CANsB;EAc/BC,KAAK,EAAE,EACH,GAAGjB,aADA;IAEHS,eAAe,EAAE,aAFd;IAGHC,KAAK,EAAEE;EAHJ,CAdwB;EAmB/BM,MAAM,EAAE,EACJ,GAAGlB,aADC;IAEJS,eAAe,EAAE,aAFb;IAGJC,KAAK,EAAES,2BAHH;IAIJN,MAAM,EAAG,OAAMM,2BAA4B,EAJvC;IAKJd,WAAW,EAAE;EALT,CAnBuB;EA0B/Be,QAAQ,EAAE;IACNP,MAAM,EAAG,aAAYQ,YAAa,EAD5B;IAENX,KAAK,EAAEW,YAFD;IAGNZ,eAAe,EAAEa,WAHX;IAINC,MAAM,EAAE;EAJF,CA1BqB;EAgC/BC,SAAS,EAAE,EACP,GAAGxB,aADI;IAEPS,eAAe,EAAE,aAFV;IAGPC,KAAK,EAAEY;EAHA;AAhCoB,CAAD,CAAlC;AA0CA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,MAAT,OAA+E;EAAA,IAA/D;IAAEC,KAAF;IAASC,SAAT;IAAoBP,QAAQ,GAAG,KAA/B;IAAsC,GAAGQ;EAAzC,CAA+D;EAClF,oBACI;IAAQ,SAAS,EAAE9B,OAAO,CAAC+B,MAAM,CAACC,MAAR,EAAgBH,SAAhB,CAA1B;IAAsD,QAAQ,EAAEP,QAAhE;IAAA,GAA8EQ,KAA9E;IAAA,UACKF;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;KANeD,M"},"metadata":{},"sourceType":"module"}