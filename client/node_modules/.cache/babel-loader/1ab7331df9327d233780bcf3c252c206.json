{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandarvasiljevic/git/Cosuno/client/src/views/Dashboard.tsx\";\nimport React from 'react';\nimport { stylesheet } from 'typestyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = stylesheet({\n  dashboardPage: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: \"row\"\n  },\n  dashboardList: {\n    display: 'flex',\n    flexDirection: 'column',\n    $nest: {\n      '& > *': {\n        padding: '0.5rem'\n      }\n    }\n  },\n  company: {},\n  gridLayout: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(4, 1fr) ' // gridTemplateRows: '1fr 1fr',\n\n  }\n});\nexport function Dashboard(_ref) {\n  let {\n    companies\n  } = _ref;\n  //todo add a spinner\n  if (!companies) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Nothing here\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 28\n  }, this);\n  if (companies.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No companies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 40\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dashboardPage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dashboardList,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: styles.gridLayout,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"speciality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), companies.map(company => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.gridLayout,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: company.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: company.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: company.speciality\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)]\n        }, company.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: 'text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","stylesheet","styles","dashboardPage","display","justifyContent","flexDirection","dashboardList","$nest","padding","company","gridLayout","gridTemplateColumns","Dashboard","companies","length","map","name","city","speciality"],"sources":["/Users/aleksandarvasiljevic/git/Cosuno/client/src/views/Dashboard.tsx"],"sourcesContent":["import React from 'react';\nimport { stylesheet } from 'typestyle';\n\nconst styles = stylesheet({\n    dashboardPage: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: \"row\"\n    },\n    dashboardList: {\n        display: 'flex',\n        flexDirection: 'column',\n\n        $nest: {\n            '& > *': {\n                padding: '0.5rem',\n            },\n        },\n    },\n    company: {},\n    gridLayout: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(4, 1fr) ',\n        // gridTemplateRows: '1fr 1fr',\n    },\n});\n\ntype DashboardProps = {\n    companies: { name: string; city: string; speciality: string }[] | undefined;\n};\n\nexport function Dashboard({ companies }: DashboardProps) {\n    //todo add a spinner\n    if (!companies) return <div>Nothing here</div>;\n\n    if (companies.length === 0) return <div>No companies</div>;\n\n    return (\n        <div className={styles.dashboardPage}>\n            <div className={styles.dashboardList}>\n                <header className={styles.gridLayout}>\n                    <span>logo</span>\n                    <span>Name</span>\n                    <span>city</span>\n                    <span>speciality</span>\n                </header>\n                {companies.map((company) => {\n                    return (\n                        <div key={company.name} className={styles.gridLayout}>\n                            <span>image</span>\n                            <span>{company.name}</span>\n                            <span>{company.city}</span>\n                            <span>{company.speciality}</span>\n                        </div>\n                    );\n                })}\n            </div>\n            <footer>\n                <input type={'text'} />\n            </footer>\n        </div>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,WAA3B;;AAEA,MAAMC,MAAM,GAAGD,UAAU,CAAC;EACtBE,aAAa,EAAE;IACXC,OAAO,EAAE,MADE;IAEXC,cAAc,EAAE,QAFL;IAGXC,aAAa,EAAE;EAHJ,CADO;EAMtBC,aAAa,EAAE;IACXH,OAAO,EAAE,MADE;IAEXE,aAAa,EAAE,QAFJ;IAIXE,KAAK,EAAE;MACH,SAAS;QACLC,OAAO,EAAE;MADJ;IADN;EAJI,CANO;EAgBtBC,OAAO,EAAE,EAhBa;EAiBtBC,UAAU,EAAE;IACRP,OAAO,EAAE,MADD;IAERQ,mBAAmB,EAAE,iBAFb,CAGR;;EAHQ;AAjBU,CAAD,CAAzB;AA4BA,OAAO,SAASC,SAAT,OAAkD;EAAA,IAA/B;IAAEC;EAAF,CAA+B;EACrD;EACA,IAAI,CAACA,SAAL,EAAgB,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAEhB,IAAIA,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAE5B,oBACI;IAAK,SAAS,EAAEb,MAAM,CAACC,aAAvB;IAAA,wBACI;MAAK,SAAS,EAAED,MAAM,CAACK,aAAvB;MAAA,wBACI;QAAQ,SAAS,EAAEL,MAAM,CAACS,UAA1B;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAOKG,SAAS,CAACE,GAAV,CAAeN,OAAD,IAAa;QACxB,oBACI;UAAwB,SAAS,EAAER,MAAM,CAACS,UAA1C;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,UAAOD,OAAO,CAACO;UAAf;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAA,UAAOP,OAAO,CAACQ;UAAf;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII;YAAA,UAAOR,OAAO,CAACS;UAAf;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA,GAAUT,OAAO,CAACO,IAAlB;UAAA;UAAA;UAAA;QAAA,QADJ;MAQH,CATA,CAPL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAmBI;MAAA,uBACI;QAAO,IAAI,EAAE;MAAb;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAnBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBH;KA/BeJ,S"},"metadata":{},"sourceType":"module"}