{"ast":null,"code":"import _inherits from \"/Users/aleksandarvasiljevic/github/Cosuno/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/aleksandarvasiljevic/github/Cosuno/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/aleksandarvasiljevic/github/Cosuno/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aleksandarvasiljevic/github/Cosuno/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _createForOfIteratorHelper from \"/Users/aleksandarvasiljevic/github/Cosuno/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/aleksandarvasiljevic/github/Cosuno/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\n/**\n * The unique id is used for unique hashes.\n */\nvar uniqueId = 0;\n/**\n * Quick dictionary lookup for unit-less numbers.\n */\n\nvar CSS_NUMBER = Object.create(null);\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\n\nvar CSS_NUMBER_KEYS = [\"animation-iteration-count\", \"border-image-outset\", \"border-image-slice\", \"border-image-width\", \"box-flex\", \"box-flex-group\", \"box-ordinal-group\", \"column-count\", \"columns\", \"counter-increment\", \"counter-reset\", \"flex\", \"flex-grow\", \"flex-positive\", \"flex-shrink\", \"flex-negative\", \"flex-order\", \"font-weight\", \"grid-area\", \"grid-column\", \"grid-column-end\", \"grid-column-span\", \"grid-column-start\", \"grid-row\", \"grid-row-end\", \"grid-row-span\", \"grid-row-start\", \"line-clamp\", \"line-height\", \"opacity\", \"order\", \"orphans\", \"tab-size\", \"widows\", \"z-index\", \"zoom\", // SVG properties.\n\"fill-opacity\", \"flood-opacity\", \"stop-opacity\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\"]; // Add vendor prefixes to all unit-less properties.\n\nfor (var _i = 0, _CSS_NUMBER_KEYS = CSS_NUMBER_KEYS; _i < _CSS_NUMBER_KEYS.length; _i++) {\n  var property = _CSS_NUMBER_KEYS[_i];\n\n  for (var _i2 = 0, _arr = [\"-webkit-\", \"-ms-\", \"-moz-\", \"-o-\", \"\"]; _i2 < _arr.length; _i2++) {\n    var prefix = _arr[_i2];\n    CSS_NUMBER[prefix + property] = true;\n  }\n}\n/**\n * Escape a CSS class name.\n */\n\n\nfunction escape(str) {\n  return str.replace(/[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g, \"\\\\$&\");\n}\n/**\n * Transform a JavaScript property into a CSS property.\n */\n\n\nfunction hyphenate(propertyName) {\n  return propertyName.replace(/[A-Z]/g, function (m) {\n    return \"-\".concat(m.toLowerCase());\n  }).replace(/^ms-/, \"-ms-\"); // Internet Explorer vendor prefix.\n}\n/**\n * Generate a hash value from a string.\n */\n\n\nfunction stringHash(str) {\n  var value = 5381;\n  var len = str.length;\n\n  while (len--) {\n    value = value * 33 ^ str.charCodeAt(len);\n  }\n\n  return (value >>> 0).toString(36);\n}\n/**\n * Transform a style string to a CSS string.\n */\n\n\nfunction styleToString(key, value) {\n  if (value && typeof value === \"number\" && !CSS_NUMBER[key]) {\n    return \"\".concat(key, \":\").concat(value, \"px\");\n  }\n\n  return \"\".concat(key, \":\").concat(value);\n}\n/**\n * Sort an array of tuples by first value.\n */\n\n\nfunction sortTuples(value) {\n  return value.sort(function (a, b) {\n    return a[0] > b[0] ? 1 : -1;\n  });\n}\n/**\n * Categorize user styles.\n */\n\n\nfunction parseStyles(styles, hasNestedStyles) {\n  var properties = [];\n  var nestedStyles = []; // Sort keys before adding to styles.\n\n  for (var _i3 = 0, _Object$keys = Object.keys(styles); _i3 < _Object$keys.length; _i3++) {\n    var _key = _Object$keys[_i3];\n\n    var name = _key.trim();\n\n    var value = styles[_key];\n\n    if (name.charCodeAt(0) !== 36\n    /* $ */\n    && value != null) {\n      if (typeof value === \"object\" && !Array.isArray(value)) {\n        nestedStyles.push([name, value]);\n      } else {\n        properties.push([hyphenate(name), value]);\n      }\n    }\n  }\n\n  return {\n    style: stringifyProperties(sortTuples(properties)),\n    nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n    isUnique: !!styles.$unique\n  };\n}\n/**\n * Stringify an array of property tuples.\n */\n\n\nfunction stringifyProperties(properties) {\n  return properties.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        name = _ref2[0],\n        value = _ref2[1];\n\n    if (!Array.isArray(value)) return styleToString(name, value);\n    return value.map(function (x) {\n      return styleToString(name, x);\n    }).join(\";\");\n  }).join(\";\");\n}\n/**\n * Interpolate CSS selectors.\n */\n\n\nfunction interpolate(selector, parent) {\n  if (selector.indexOf(\"&\") === -1) return \"\".concat(parent, \" \").concat(selector);\n  return selector.replace(/&/g, parent);\n}\n/**\n * Recursive loop building styles with deferred selectors.\n */\n\n\nfunction stylize(selector, styles, rulesList, stylesList, parent) {\n  var _parseStyles = parseStyles(styles, selector !== \"\"),\n      style = _parseStyles.style,\n      nested = _parseStyles.nested,\n      isUnique = _parseStyles.isUnique;\n\n  var pid = style;\n\n  if (selector.charCodeAt(0) === 64\n  /* @ */\n  ) {\n    var child = {\n      selector: selector,\n      styles: [],\n      rules: [],\n      style: parent ? \"\" : style\n    };\n    rulesList.push(child); // Nested styles support (e.g. `.foo > @media > .bar`).\n\n    if (style && parent) {\n      child.styles.push({\n        selector: parent,\n        style: style,\n        isUnique: isUnique\n      });\n    }\n\n    var _iterator = _createForOfIteratorHelper(nested),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            name = _step$value[0],\n            value = _step$value[1];\n\n        pid += name + stylize(name, value, child.rules, child.styles, parent);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else {\n    var _key2 = parent ? interpolate(selector, parent) : selector;\n\n    if (style) stylesList.push({\n      selector: _key2,\n      style: style,\n      isUnique: isUnique\n    });\n\n    var _iterator2 = _createForOfIteratorHelper(nested),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _step2$value = _slicedToArray(_step2.value, 2),\n            _name = _step2$value[0],\n            _value = _step2$value[1];\n\n        pid += _name + stylize(_name, _value, rulesList, stylesList, _key2);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return pid;\n}\n/**\n * Transform `stylize` tree into style objects.\n */\n\n\nfunction composeStylize(cache, pid, rulesList, stylesList, className, isStyle) {\n  var _iterator3 = _createForOfIteratorHelper(stylesList),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _step3$value = _step3.value,\n          selector = _step3$value.selector,\n          style = _step3$value.style,\n          isUnique = _step3$value.isUnique;\n\n      var _key3 = isStyle ? interpolate(selector, className) : selector;\n\n      var id = isUnique ? \"u\\0\".concat((++uniqueId).toString(36)) : \"s\\0\".concat(pid, \"\\0\").concat(style);\n      var item = new Style(style, id);\n      item.add(new Selector(_key3, \"k\\0\".concat(pid, \"\\0\").concat(_key3)));\n      cache.add(item);\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  var _iterator4 = _createForOfIteratorHelper(rulesList),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var _step4$value = _step4.value,\n          _selector = _step4$value.selector,\n          _style = _step4$value.style,\n          rules = _step4$value.rules,\n          styles = _step4$value.styles;\n\n      var _item = new Rule(_selector, _style, \"r\\0\".concat(pid, \"\\0\").concat(_selector, \"\\0\").concat(_style));\n\n      composeStylize(_item, pid, rules, styles, className, isStyle);\n      cache.add(_item);\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n}\n/**\n * Cache to list to styles.\n */\n\n\nfunction join(arr) {\n  var res = \"\";\n\n  for (var i = 0; i < arr.length; i++) {\n    res += arr[i];\n  }\n\n  return res;\n}\n/**\n * Noop changes.\n */\n\n\nvar noopChanges = {\n  add: function add() {\n    return undefined;\n  },\n  change: function change() {\n    return undefined;\n  },\n  remove: function remove() {\n    return undefined;\n  }\n};\n/**\n * Implement a cache/event emitter.\n */\n\nexport var Cache = /*#__PURE__*/function () {\n  function Cache() {\n    var changes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noopChanges;\n\n    _classCallCheck(this, Cache);\n\n    this.changes = changes;\n    this.sheet = [];\n    this.changeId = 0;\n    this._keys = [];\n    this._children = Object.create(null);\n    this._counters = Object.create(null);\n  }\n\n  _createClass(Cache, [{\n    key: \"add\",\n    value: function add(style) {\n      var count = this._counters[style.id] || 0;\n      var item = this._children[style.id] || style.clone();\n      this._counters[style.id] = count + 1;\n\n      if (count === 0) {\n        this._children[item.id] = item;\n\n        this._keys.push(item.id);\n\n        this.sheet.push(item.getStyles());\n        this.changeId++;\n        this.changes.add(item, this._keys.length - 1);\n      } else if (item instanceof Cache && style instanceof Cache) {\n        var curIndex = this._keys.indexOf(style.id);\n\n        var prevItemChangeId = item.changeId;\n        item.merge(style);\n\n        if (item.changeId !== prevItemChangeId) {\n          this.sheet.splice(curIndex, 1, item.getStyles());\n          this.changeId++;\n          this.changes.change(item, curIndex, curIndex);\n        }\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(style) {\n      var count = this._counters[style.id];\n\n      if (count) {\n        this._counters[style.id] = count - 1;\n        var item = this._children[style.id];\n\n        var index = this._keys.indexOf(item.id);\n\n        if (count === 1) {\n          delete this._counters[style.id];\n          delete this._children[style.id];\n\n          this._keys.splice(index, 1);\n\n          this.sheet.splice(index, 1);\n          this.changeId++;\n          this.changes.remove(item, index);\n        } else if (item instanceof Cache && style instanceof Cache) {\n          var prevChangeId = item.changeId;\n          item.unmerge(style);\n\n          if (item.changeId !== prevChangeId) {\n            this.sheet.splice(index, 1, item.getStyles());\n            this.changeId++;\n            this.changes.change(item, index, index);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"values\",\n    value: function values() {\n      var _this = this;\n\n      return this._keys.map(function (key) {\n        return _this._children[key];\n      });\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(cache) {\n      var _iterator5 = _createForOfIteratorHelper(cache.values()),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var item = _step5.value;\n          this.add(item);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"unmerge\",\n    value: function unmerge(cache) {\n      var _iterator6 = _createForOfIteratorHelper(cache.values()),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var item = _step6.value;\n          this.remove(item);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Cache().merge(this);\n    }\n  }]);\n\n  return Cache;\n}();\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\n\nexport var Selector = /*#__PURE__*/function () {\n  function Selector(selector, id) {\n    _classCallCheck(this, Selector);\n\n    this.selector = selector;\n    this.id = id;\n  }\n\n  _createClass(Selector, [{\n    key: \"getStyles\",\n    value: function getStyles() {\n      return this.selector;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return this;\n    }\n  }]);\n\n  return Selector;\n}();\n/**\n * The style container registers a style string with selectors.\n */\n\nexport var Style = /*#__PURE__*/function (_Cache) {\n  _inherits(Style, _Cache);\n\n  var _super = _createSuper(Style);\n\n  function Style(style, id) {\n    var _this2;\n\n    _classCallCheck(this, Style);\n\n    _this2 = _super.call(this);\n    _this2.style = style;\n    _this2.id = id;\n    return _this2;\n  }\n\n  _createClass(Style, [{\n    key: \"getStyles\",\n    value: function getStyles() {\n      return \"\".concat(this.sheet.join(\",\"), \"{\").concat(this.style, \"}\");\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Style(this.style, this.id).merge(this);\n    }\n  }]);\n\n  return Style;\n}(Cache);\n/**\n * Implement rule logic for style output.\n */\n\nexport var Rule = /*#__PURE__*/function (_Cache2) {\n  _inherits(Rule, _Cache2);\n\n  var _super2 = _createSuper(Rule);\n\n  function Rule(rule, style, id) {\n    var _this3;\n\n    _classCallCheck(this, Rule);\n\n    _this3 = _super2.call(this);\n    _this3.rule = rule;\n    _this3.style = style;\n    _this3.id = id;\n    return _this3;\n  }\n\n  _createClass(Rule, [{\n    key: \"getStyles\",\n    value: function getStyles() {\n      return \"\".concat(this.rule, \"{\").concat(this.style).concat(join(this.sheet), \"}\");\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Rule(this.rule, this.style, this.id).merge(this);\n    }\n  }]);\n\n  return Rule;\n}(Cache);\n\nfunction key(pid, styles) {\n  var key = \"f\".concat(stringHash(pid));\n  if (process.env.NODE_ENV === \"production\" || !styles.$displayName) return key;\n  return \"\".concat(styles.$displayName, \"_\").concat(key);\n}\n/**\n * The FreeStyle class implements the API for everything else.\n */\n\n\nexport var FreeStyle = /*#__PURE__*/function (_Cache3) {\n  _inherits(FreeStyle, _Cache3);\n\n  var _super3 = _createSuper(FreeStyle);\n\n  function FreeStyle(id, changes) {\n    var _this4;\n\n    _classCallCheck(this, FreeStyle);\n\n    _this4 = _super3.call(this, changes);\n    _this4.id = id;\n    return _this4;\n  }\n\n  _createClass(FreeStyle, [{\n    key: \"registerStyle\",\n    value: function registerStyle(styles) {\n      var rulesList = [];\n      var stylesList = [];\n      var pid = stylize(\"&\", styles, rulesList, stylesList);\n      var id = key(pid, styles);\n      var selector = \".\".concat(process.env.NODE_ENV === \"production\" ? id : escape(id));\n      composeStylize(this, pid, rulesList, stylesList, selector, true);\n      return id;\n    }\n  }, {\n    key: \"registerKeyframes\",\n    value: function registerKeyframes(keyframes) {\n      return this.registerHashRule(\"@keyframes\", keyframes);\n    }\n  }, {\n    key: \"registerHashRule\",\n    value: function registerHashRule(prefix, styles) {\n      var rulesList = [];\n      var stylesList = [];\n      var pid = stylize(\"\", styles, rulesList, stylesList);\n      var id = key(pid, styles);\n      var selector = \"\".concat(prefix, \" \").concat(process.env.NODE_ENV === \"production\" ? id : escape(id));\n      var rule = new Rule(selector, \"\", \"h\\0\".concat(pid, \"\\0\").concat(prefix));\n      composeStylize(rule, pid, rulesList, stylesList, \"\", false);\n      this.add(rule);\n      return id;\n    }\n  }, {\n    key: \"registerRule\",\n    value: function registerRule(rule, styles) {\n      var rulesList = [];\n      var stylesList = [];\n      var pid = stylize(rule, styles, rulesList, stylesList);\n      composeStylize(this, pid, rulesList, stylesList, \"\", false);\n    }\n  }, {\n    key: \"registerCss\",\n    value: function registerCss(styles) {\n      return this.registerRule(\"\", styles);\n    }\n  }, {\n    key: \"getStyles\",\n    value: function getStyles() {\n      return join(this.sheet);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new FreeStyle(this.id, this.changes).merge(this);\n    }\n  }]);\n\n  return FreeStyle;\n}(Cache);\n/**\n * Exports a simple function to create a new instance.\n */\n\nexport function create(changes) {\n  return new FreeStyle(\"f\".concat((++uniqueId).toString(36)), changes);\n}","map":{"version":3,"mappings":"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","names":["uniqueId","CSS_NUMBER","Object","create","CSS_NUMBER_KEYS","property","prefix","escape","str","replace","hyphenate","propertyName","m","toLowerCase","stringHash","value","len","length","charCodeAt","toString","styleToString","key","sortTuples","sort","a","b","parseStyles","styles","hasNestedStyles","properties","nestedStyles","keys","name","trim","Array","isArray","push","style","stringifyProperties","nested","isUnique","$unique","map","x","join","interpolate","selector","parent","indexOf","stylize","rulesList","stylesList","pid","child","rules","composeStylize","cache","className","isStyle","id","item","Style","add","Selector","Rule","arr","res","i","noopChanges","undefined","change","remove","Cache","changes","count","_counters","_children","clone","_keys","sheet","getStyles","changeId","curIndex","prevItemChangeId","merge","splice","index","prevChangeId","unmerge","values","rule","process","env","NODE_ENV","$displayName","FreeStyle","keyframes","registerHashRule","registerRule"],"sources":["/Users/aleksandarvasiljevic/github/Cosuno/client/node_modules/free-style/src/index.ts"],"sourcesContent":["/**\n * The unique id is used for unique hashes.\n */\nlet uniqueId = 0;\n\n/**\n * Valid CSS property values.\n */\nexport type PropertyValue = number | boolean | string;\n\n/**\n * Input styles object.\n */\nexport interface Styles {\n  $unique?: boolean;\n  $displayName?: string;\n  [selector: string]:\n    | null\n    | undefined\n    | PropertyValue\n    | PropertyValue[]\n    | Styles;\n}\n\n/**\n * Hash algorithm interface.\n */\nexport type HashFunction = (str: string) => string;\n\n/**\n * Quick dictionary lookup for unit-less numbers.\n */\nconst CSS_NUMBER: Record<string, true> = Object.create(null);\n\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\nconst CSS_NUMBER_KEYS = [\n  \"animation-iteration-count\",\n  \"border-image-outset\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"box-flex\",\n  \"box-flex-group\",\n  \"box-ordinal-group\",\n  \"column-count\",\n  \"columns\",\n  \"counter-increment\",\n  \"counter-reset\",\n  \"flex\",\n  \"flex-grow\",\n  \"flex-positive\",\n  \"flex-shrink\",\n  \"flex-negative\",\n  \"flex-order\",\n  \"font-weight\",\n  \"grid-area\",\n  \"grid-column\",\n  \"grid-column-end\",\n  \"grid-column-span\",\n  \"grid-column-start\",\n  \"grid-row\",\n  \"grid-row-end\",\n  \"grid-row-span\",\n  \"grid-row-start\",\n  \"line-clamp\",\n  \"line-height\",\n  \"opacity\",\n  \"order\",\n  \"orphans\",\n  \"tab-size\",\n  \"widows\",\n  \"z-index\",\n  \"zoom\",\n  // SVG properties.\n  \"fill-opacity\",\n  \"flood-opacity\",\n  \"stop-opacity\",\n  \"stroke-dasharray\",\n  \"stroke-dashoffset\",\n  \"stroke-miterlimit\",\n  \"stroke-opacity\",\n  \"stroke-width\"\n];\n\n// Add vendor prefixes to all unit-less properties.\nfor (const property of CSS_NUMBER_KEYS) {\n  for (const prefix of [\"-webkit-\", \"-ms-\", \"-moz-\", \"-o-\", \"\"]) {\n    CSS_NUMBER[prefix + property] = true;\n  }\n}\n\n/**\n * Escape a CSS class name.\n */\nfunction escape(str: string) {\n  return str.replace(/[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g, \"\\\\$&\");\n}\n\n/**\n * Transform a JavaScript property into a CSS property.\n */\nfunction hyphenate(propertyName: string): string {\n  return propertyName\n    .replace(/[A-Z]/g, (m: string) => `-${m.toLowerCase()}`)\n    .replace(/^ms-/, \"-ms-\"); // Internet Explorer vendor prefix.\n}\n\n/**\n * Generate a hash value from a string.\n */\nfunction stringHash(str: string): string {\n  let value = 5381;\n  let len = str.length;\n  while (len--) value = (value * 33) ^ str.charCodeAt(len);\n  return (value >>> 0).toString(36);\n}\n\n/**\n * Transform a style string to a CSS string.\n */\nfunction styleToString(key: string, value: PropertyValue) {\n  if (value && typeof value === \"number\" && !CSS_NUMBER[key]) {\n    return `${key}:${value}px`;\n  }\n\n  return `${key}:${value}`;\n}\n\n/**\n * Sort an array of tuples by first value.\n */\nfunction sortTuples<T extends any[]>(value: T[]): T[] {\n  return value.sort((a, b) => (a[0] > b[0] ? 1 : -1));\n}\n\n/**\n * Categorize user styles.\n */\nfunction parseStyles(styles: Styles, hasNestedStyles: boolean) {\n  const properties: Array<[string, PropertyValue | PropertyValue[]]> = [];\n  const nestedStyles: Array<[string, Styles]> = [];\n\n  // Sort keys before adding to styles.\n  for (const key of Object.keys(styles)) {\n    const name = key.trim();\n    const value = styles[key];\n\n    if (name.charCodeAt(0) !== 36 /* $ */ && value != null) {\n      if (typeof value === \"object\" && !Array.isArray(value)) {\n        nestedStyles.push([name, value]);\n      } else {\n        properties.push([hyphenate(name), value]);\n      }\n    }\n  }\n\n  return {\n    style: stringifyProperties(sortTuples(properties)),\n    nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n    isUnique: !!styles.$unique\n  };\n}\n\n/**\n * Stringify an array of property tuples.\n */\nfunction stringifyProperties(\n  properties: Array<[string, PropertyValue | PropertyValue[]]>\n) {\n  return properties\n    .map(([name, value]) => {\n      if (!Array.isArray(value)) return styleToString(name, value);\n\n      return value.map(x => styleToString(name, x)).join(\";\");\n    })\n    .join(\";\");\n}\n\n/**\n * Interpolate CSS selectors.\n */\nfunction interpolate(selector: string, parent: string) {\n  if (selector.indexOf(\"&\") === -1) return `${parent} ${selector}`;\n  return selector.replace(/&/g, parent);\n}\n\ntype StylizeStyle = { selector: string; style: string; isUnique: boolean };\n\ntype StylizeRule = {\n  selector: string;\n  style: string;\n  rules: StylizeRule[];\n  styles: StylizeStyle[];\n};\n\n/**\n * Recursive loop building styles with deferred selectors.\n */\nfunction stylize(\n  selector: string,\n  styles: Styles,\n  rulesList: StylizeRule[],\n  stylesList: StylizeStyle[],\n  parent?: string\n) {\n  const { style, nested, isUnique } = parseStyles(styles, selector !== \"\");\n  let pid = style;\n\n  if (selector.charCodeAt(0) === 64 /* @ */) {\n    const child: StylizeRule = {\n      selector,\n      styles: [],\n      rules: [],\n      style: parent ? \"\" : style\n    };\n    rulesList.push(child);\n\n    // Nested styles support (e.g. `.foo > @media > .bar`).\n    if (style && parent) {\n      child.styles.push({ selector: parent, style, isUnique });\n    }\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, child.rules, child.styles, parent);\n    }\n  } else {\n    const key = parent ? interpolate(selector, parent) : selector;\n\n    if (style) stylesList.push({ selector: key, style, isUnique });\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, rulesList, stylesList, key);\n    }\n  }\n\n  return pid;\n}\n\n/**\n * Transform `stylize` tree into style objects.\n */\nfunction composeStylize(\n  cache: Cache<Rule | Style>,\n  pid: string,\n  rulesList: StylizeRule[],\n  stylesList: StylizeStyle[],\n  className: string,\n  isStyle: boolean\n) {\n  for (const { selector, style, isUnique } of stylesList) {\n    const key = isStyle ? interpolate(selector, className) : selector;\n    const id = isUnique\n      ? `u\\0${(++uniqueId).toString(36)}`\n      : `s\\0${pid}\\0${style}`;\n    const item = new Style(style, id);\n    item.add(new Selector(key, `k\\0${pid}\\0${key}`));\n    cache.add(item);\n  }\n\n  for (const { selector, style, rules, styles } of rulesList) {\n    const item = new Rule(selector, style, `r\\0${pid}\\0${selector}\\0${style}`);\n    composeStylize(item, pid, rules, styles, className, isStyle);\n    cache.add(item);\n  }\n}\n\n/**\n * Cache to list to styles.\n */\nfunction join(arr: string[]): string {\n  let res = \"\";\n  for (let i = 0; i < arr.length; i++) res += arr[i];\n  return res;\n}\n\n/**\n * Propagate change events.\n */\nexport interface Changes {\n  add(style: Container<any>, index: number): void;\n  change(style: Container<any>, oldIndex: number, newIndex: number): void;\n  remove(style: Container<any>, index: number): void;\n}\n\n/**\n * Noop changes.\n */\nconst noopChanges: Changes = {\n  add: () => undefined,\n  change: () => undefined,\n  remove: () => undefined\n};\n\n/**\n * Cache-able interface.\n */\nexport interface Container<T> {\n  id: string;\n  clone(): T;\n  getStyles(): string;\n}\n\n/**\n * Implement a cache/event emitter.\n */\nexport class Cache<T extends Container<any>> {\n  sheet: string[] = [];\n  changeId = 0;\n\n  private _keys: string[] = [];\n  private _children: Record<string, T | undefined> = Object.create(null);\n  private _counters: Record<string, number | undefined> = Object.create(null);\n\n  constructor(public changes: Changes = noopChanges) {}\n\n  add(style: T): void {\n    const count = this._counters[style.id] || 0;\n    const item: T = this._children[style.id] || style.clone();\n\n    this._counters[style.id] = count + 1;\n\n    if (count === 0) {\n      this._children[item.id] = item;\n      this._keys.push(item.id);\n      this.sheet.push(item.getStyles());\n      this.changeId++;\n      this.changes.add(item, this._keys.length - 1);\n    } else if (item instanceof Cache && style instanceof Cache) {\n      const curIndex = this._keys.indexOf(style.id);\n      const prevItemChangeId = item.changeId;\n\n      item.merge(style);\n\n      if (item.changeId !== prevItemChangeId) {\n        this.sheet.splice(curIndex, 1, item.getStyles());\n        this.changeId++;\n        this.changes.change(item, curIndex, curIndex);\n      }\n    }\n  }\n\n  remove(style: T): void {\n    const count = this._counters[style.id];\n\n    if (count) {\n      this._counters[style.id] = count - 1;\n\n      const item = this._children[style.id]!;\n      const index = this._keys.indexOf(item.id);\n\n      if (count === 1) {\n        delete this._counters[style.id];\n        delete this._children[style.id];\n\n        this._keys.splice(index, 1);\n        this.sheet.splice(index, 1);\n        this.changeId++;\n        this.changes.remove(item, index);\n      } else if (item instanceof Cache && style instanceof Cache) {\n        const prevChangeId = item.changeId;\n\n        item.unmerge(style);\n\n        if (item.changeId !== prevChangeId) {\n          this.sheet.splice(index, 1, item.getStyles());\n          this.changeId++;\n          this.changes.change(item, index, index);\n        }\n      }\n    }\n  }\n\n  values(): T[] {\n    return this._keys.map(key => this._children[key]!);\n  }\n\n  merge(cache: Cache<any>) {\n    for (const item of cache.values()) this.add(item);\n    return this;\n  }\n\n  unmerge(cache: Cache<any>) {\n    for (const item of cache.values()) this.remove(item);\n    return this;\n  }\n\n  clone(): Cache<T> {\n    return new Cache<T>().merge(this);\n  }\n}\n\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\nexport class Selector implements Container<Selector> {\n  constructor(public selector: string, public id: string) {}\n\n  getStyles() {\n    return this.selector;\n  }\n\n  clone(): Selector {\n    return this;\n  }\n}\n\n/**\n * The style container registers a style string with selectors.\n */\nexport class Style extends Cache<Selector> implements Container<Style> {\n  constructor(public style: string, public id: string) {\n    super();\n  }\n\n  getStyles(): string {\n    return `${this.sheet.join(\",\")}{${this.style}}`;\n  }\n\n  clone(): Style {\n    return new Style(this.style, this.id).merge(this);\n  }\n}\n\n/**\n * Implement rule logic for style output.\n */\nexport class Rule extends Cache<Rule | Style> implements Container<Rule> {\n  constructor(public rule: string, public style: string, public id: string) {\n    super();\n  }\n\n  getStyles(): string {\n    return `${this.rule}{${this.style}${join(this.sheet)}}`;\n  }\n\n  clone(): Rule {\n    return new Rule(this.rule, this.style, this.id).merge(this);\n  }\n}\n\nfunction key(pid: string, styles: Styles): string {\n  const key = `f${stringHash(pid)}`;\n  if (process.env.NODE_ENV === \"production\" || !styles.$displayName) return key;\n  return `${styles.$displayName}_${key}`;\n}\n\n/**\n * The FreeStyle class implements the API for everything else.\n */\nexport class FreeStyle extends Cache<Rule | Style>\n  implements Container<FreeStyle> {\n  constructor(public id: string, changes?: Changes) {\n    super(changes);\n  }\n\n  registerStyle(styles: Styles) {\n    const rulesList: StylizeRule[] = [];\n    const stylesList: StylizeStyle[] = [];\n    const pid = stylize(\"&\", styles, rulesList, stylesList);\n    const id = key(pid, styles);\n    const selector = `.${\n      process.env.NODE_ENV === \"production\" ? id : escape(id)\n    }`;\n    composeStylize(this, pid, rulesList, stylesList, selector, true);\n    return id;\n  }\n\n  registerKeyframes(keyframes: Styles) {\n    return this.registerHashRule(\"@keyframes\", keyframes);\n  }\n\n  registerHashRule(prefix: string, styles: Styles) {\n    const rulesList: StylizeRule[] = [];\n    const stylesList: StylizeStyle[] = [];\n    const pid = stylize(\"\", styles, rulesList, stylesList);\n    const id = key(pid, styles);\n    const selector = `${prefix} ${\n      process.env.NODE_ENV === \"production\" ? id : escape(id)\n    }`;\n    const rule = new Rule(selector, \"\", `h\\0${pid}\\0${prefix}`);\n    composeStylize(rule, pid, rulesList, stylesList, \"\", false);\n    this.add(rule);\n    return id;\n  }\n\n  registerRule(rule: string, styles: Styles) {\n    const rulesList: StylizeRule[] = [];\n    const stylesList: StylizeStyle[] = [];\n    const pid = stylize(rule, styles, rulesList, stylesList);\n    composeStylize(this, pid, rulesList, stylesList, \"\", false);\n  }\n\n  registerCss(styles: Styles) {\n    return this.registerRule(\"\", styles);\n  }\n\n  getStyles(): string {\n    return join(this.sheet);\n  }\n\n  clone(): FreeStyle {\n    return new FreeStyle(this.id, this.changes).merge(this);\n  }\n}\n\n/**\n * Exports a simple function to create a new instance.\n */\nexport function create(changes?: Changes) {\n  return new FreeStyle(`f${(++uniqueId).toString(36)}`, changes);\n}\n"]},"metadata":{},"sourceType":"module"}